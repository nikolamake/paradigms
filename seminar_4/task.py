# Написать скрипт для расчета корреляции Пирсона
# между двумя случайными величинами (двумя массивами).
# Можете использовать любую парадигму, но рекомендую использовать
# функциональную, т.к. в этом примере она значительно упростит вам жизнь.

# Импортируем модуль math для вычисления квадратного корня
import math

# Определяем функцию для вычисления среднего значения массива
def mean(array):
  # Суммируем все элементы массива и делим на их количество
  return sum(array) / len(array)

# Определяем функцию для вычисления корреляции Пирсона между двумя массивами
def pearson_correlation(x, y):
  # Проверяем, что массивы имеют одинаковую длину
  if len(x) != len(y):
    # Если нет, то возвращаем ошибку
    return "Error: arrays must have the same length"
  # Вычисляем средние значения массивов
  x_mean = mean(x)
  y_mean = mean(y)
  # Вычисляем числитель формулы корреляции Пирсона
  numerator = sum((x[i] - x_mean) * (y[i] - y_mean) for i in range(len(x)))
  # Вычисляем знаменатель формулы корреляции Пирсона
  denominator = math.sqrt(sum((x[i] - x_mean) ** 2 for i in range(len(x)))) * math.sqrt(sum((y[i] - y_mean) ** 2 for i in range(len(y))))
  # Возвращаем результат деления числителя на знаменатель
  return numerator / denominator

# Пример использования функции
# Создаем два массива случайных величин
x = [12, 22, 32, 44, 55]
y = [2, 4, 6, 8, 10]
# Вызываем функцию для вычисления корреляции Пирсона между ними
r = pearson_correlation(x, y)
# Выводим результат на экран
print(f"The Pearson correlation between x and y is {r}")
